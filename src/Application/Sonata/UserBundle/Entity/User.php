<?php

/**
 * This file is part of the <name> project.
 *
 * (c) <yourname> <youremail>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Application\Sonata\UserBundle\Entity;

use Sonata\UserBundle\Entity\BaseUser as BaseUser;

/**
 * This file has been generated by the Sonata EasyExtends bundle.
 *
 * @link https://sonata-project.org/bundles/easy-extends
 *
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 *
 * @author <yourname> <youremail>
 */
class User extends BaseUser
{
    /**
     * @var int $id
     */
    protected $id;

    /**
     * @var string $userKey;
     */
    protected $userKey;

    /**
     * Заказы
     * @var \Doctrine\Common\Collections\Collection
     */
    protected $bookings;

    /**
     * Счета, выставленные пользователю
     * @var \Doctrine\Common\Collections\Collection
     */
    protected $invoices;

    /**
     * Get id
     *
     * @return int $id
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set userKey
     *
     *
     * @return User
     */
    public function setUserKey()
    {
        $this->userKey = sha1($this->username);

        return $this;
    }

    /**
     * Get userKey
     *
     * @return string
     */
    public function getUserKey()
    {
        return $this->userKey;
    }


    /**
     * Add booking
     *
     * @param \AppBundle\Entity\Booking $booking
     *
     * @return User
     */
    public function addBooking(\AppBundle\Entity\Booking $booking)
    {
        $booking->setUser($this);
        $this->bookings[] = $booking;

        return $this;
    }

    /**
     * Remove booking
     *
     * @param \AppBundle\Entity\Booking $booking
     */
    public function removeBooking(\AppBundle\Entity\Booking $booking)
    {
        $this->bookings->removeElement($booking);
    }

    /**
     * Get bookings
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getBookings()
    {
        return $this->bookings;
    }

    public function getServices()
    {
        $services = [];
        if ($this->getBookings()){
            foreach ($this->getBookings() as $booking) {
                if ($booking->isValid()) {
                    $services = array_merge($services, $booking->getServices()->toArray());
                }
            }
        }
        return $services;
    }
}
